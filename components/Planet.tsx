// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: Yo.Ri (https://sketchfab.com/grox777)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/purple-planet-264eb22207184fc99a5e3b1279a763b8
// Title: Purple Planet
// */

// import React, { useRef } from "react";
// import { useGLTF, useAnimations } from "@react-three/drei";

// import { Group } from "three";
// import { useFrame } from "@react-three/fiber";

// interface PlanetProps {
//   [key: string]: any;
// }

// interface GLTFResult {
//   nodes: {
//     Planet_0: THREE.Mesh;
//     Clouds_0_0: THREE.Mesh;
//     Clouds_1_0: THREE.Mesh;
//   };
//   materials: {
//     PurplePlanet: THREE.Material;
//     Clouds_0: THREE.Material;
//     Clouds_1: THREE.Material;
//   };
//   animations: THREE.AnimationClip[];
// }

// export function Planet(props: PlanetProps) {
//   const group = useRef<Group>(null);
//   const { nodes, materials, animations } =
//     useGLTF<GLTFResult>("/purple_planet.glb");
//   const { actions } = useAnimations(animations, group);

//   useFrame(({ clock }) => {
//     group.current.rotation.x = clock.getElapsedTime() * 0.05;
//     group.current.rotation.z = clock.getElapsedTime() * 0.05;
//     group.current.rotation.y = clock.getElapsedTime() * 0.05;
//   });

//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Sketchfab_Scene">
//         <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
//           <group name="Root">
//             <group name="Planet" rotation={[0, 0, Math.PI / 2]}>
//               <mesh
//                 name="Planet_0"
//                 castShadow
//                 receiveShadow
//                 geometry={nodes.Planet_0.geometry}
//                 material={materials.PurplePlanet}
//               />
//               <group
//                 name="Clouds_0"
//                 rotation={[0, 0, -Math.PI / 2]}
//                 scale={1.013}
//               >
//                 <mesh
//                   name="Clouds_0_0"
//                   castShadow
//                   receiveShadow
//                   geometry={nodes.Clouds_0_0.geometry}
//                   material={materials.Clouds_0}
//                 />
//               </group>
//             </group>
//             <group name="Clouds_1" scale={1.019}>
//               <mesh
//                 name="Clouds_1_0"
//                 castShadow
//                 receiveShadow
//                 geometry={nodes.Clouds_1_0.geometry}
//                 material={materials.Clouds_1}
//               />
//             </group>
//           </group>
//         </group>
//       </group>
//     </group>
//   );
// }

// useGLTF.preload("/purple_planet.glb");
